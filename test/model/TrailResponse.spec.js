/*
 * Caspian.Yes4Track.Service API
 * Caspian.Yes4Track.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@yes4track.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Caspianyes4TrackserviceApi);
  }
}(this, function(expect, Caspianyes4TrackserviceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TrailResponse', function() {
      beforeEach(function() {
        instance = new Caspianyes4TrackserviceApi.TrailResponse();
      });

      it('should create an instance of TrailResponse', function() {
        // TODO: update the code to test TrailResponse
        expect(instance).to.be.a(Caspianyes4TrackserviceApi.TrailResponse);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property adventureId (base name: "adventureId")', function() {
        // TODO: update the code to test the property adventureId
        expect(instance).to.have.property('adventureId');
        // expect(instance.adventureId).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "startDate")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property statistic (base name: "statistic")', function() {
        // TODO: update the code to test the property statistic
        expect(instance).to.have.property('statistic');
        // expect(instance.statistic).to.be(expectedValueLiteral);
      });

      it('should have the property adventureName (base name: "adventureName")', function() {
        // TODO: update the code to test the property adventureName
        expect(instance).to.have.property('adventureName');
        // expect(instance.adventureName).to.be(expectedValueLiteral);
      });

      it('should have the property adventureLevel (base name: "adventureLevel")', function() {
        // TODO: update the code to test the property adventureLevel
        expect(instance).to.have.property('adventureLevel');
        // expect(instance.adventureLevel).to.be(expectedValueLiteral);
      });

      it('should have the property adventureType (base name: "adventureType")', function() {
        // TODO: update the code to test the property adventureType
        expect(instance).to.have.property('adventureType');
        // expect(instance.adventureType).to.be(expectedValueLiteral);
      });

      it('should have the property photoUrl (base name: "photoUrl")', function() {
        // TODO: update the code to test the property photoUrl
        expect(instance).to.have.property('photoUrl');
        // expect(instance.photoUrl).to.be(expectedValueLiteral);
      });

    });
  });

}));
